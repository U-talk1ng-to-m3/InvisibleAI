<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Todo List</title>
<link rel="stylesheet" href="styles.css" />
</head>
<body>
<header>
  <h1>My Todo List</h1>
</header>

<div class="container">
  <input type="text" id="todo-input" placeholder="Enter a new todo" />
  <button id="add-btn">Add Todo</button>
  <ul id="todo-list"></ul>
</div>

<script src="script.js"></script>
</body>
</html>

body {
  font-family: Arial, sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
  padding: 20px;
  background-color: #f0f0f0;
}

header {
  background-color: #4CAF50;
  width: 100%;
  padding: 20px;
  text-align: center;
  color: white;
  border-radius: 8px;
  margin-bottom: 20px;
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  border: 2px solid #ccc;
  border-radius: 10px;
  padding: 20px;
  background-color: #fff;
  width: 90%;
  max-width: 500px;
}

#todo-input {
  padding: 10px;
  border-radius: 8px;
  border: 1px solid #ccc;
  width: 70%;
  margin-bottom: 10px;
  font-size: 16px;
}

#add-btn {
  padding: 10px 20px;
  border-radius: 8px;
  border: none;
  background-color: #4CAF50;
  color: white;
  cursor: pointer;
  font-size: 16px;
}

#add-btn:hover {
  background-color: #45a049;
}

#todo-list {
  list-style: none;
  padding: 0;
  width: 100%;
  margin-top: 20px;
}

.todo-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  border-radius: 8px;
  background-color: #f9f9f9;
  margin-bottom: 10px;
}

.todo-item span {
  flex: 1;
  margin-left: 10px;
}

.todo-item button {
  margin-left: 10px;
  border: none;
  border-radius: 8px;
  padding: 5px 10px;
  cursor: pointer;
}

.edit-btn {
  background-color: #2196F3;
  color: white;
}

.delete-btn {
  background-color: #f44336;
  color: white;
}

.edit-btn:hover {
  background-color: #0b7dda;
}

.delete-btn:hover {
  background-color: #da190b;
}

const todoInput = document.getElementById('todo-input');
const todoList = document.getElementById('todo-list');
const addBtn = document.getElementById('add-btn');

addBtn.addEventListener('click', addTodo);
todoInput.addEventListener('keydown', (e) => {
  if (e.key === 'Enter') {
    addTodo();
  }
});

function addTodo() {
  const text = todoInput.value.trim();
  if (text === '') return;

  const li = document.createElement('li');
  li.className = 'todo-item';

  const span = document.createElement('span');
  span.textContent = text;

  const editBtn = document.createElement('button');
  editBtn.textContent = 'Edit';
  editBtn.className = 'edit-btn';
  editBtn.onclick = () => editTodo(li, span);

  const deleteBtn = document.createElement('button');
  deleteBtn.textContent = 'Delete';
  deleteBtn.className = 'delete-btn';
  deleteBtn.onclick = () => li.remove();

  li.appendChild(span);
  li.appendChild(editBtn);
  li.appendChild(deleteBtn);

  todoList.appendChild(li);
  todoInput.value = '';
}

function editTodo(li, span) {
  const newText = prompt('Edit your todo:', span.textContent);
  if (newText !== null && newText.trim() !== '') {
    span.textContent = newText.trim();
  }
}


//Script.js
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>My Book List</title>
<link rel="stylesheet" href="books.css" />
</head>
<body>
<header>
  <h1>My Book List</h1>
  <button id="add-book-btn">Add Book</button>
</header>

<section id="book-section">
  <div class="book-container" id="books-container">
    <!-- Book cards will be appended here -->
  </div>
</section>

<script src="books.js"></script>
</body>
</html>

body {
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  margin: 0;
  padding: 20px;
  background-color: #eef2f3;
  display: flex;
  flex-direction: column;
  align-items: center;
}

header {
  width: 100%;
  background-color: #333;
  color: white;
  padding: 20px;
  text-align: center;
  border-radius: 8px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  max-width: 1000px;
}

#add-book-btn {
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  background-color: #4CAF50;
  color: white;
  font-size: 16px;
  cursor: pointer;
}

#add-book-btn:hover {
  background-color: #45a049;
}

#book-section {
  width: 100%;
  display: flex;
  justify-content: center;
}

#books-container {
  display: grid;
  gap: 20px;
  max-width: 1200px;
  width: 100%;
}

.book-card {
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 15px;
  background-color: white;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: transform 0.2s;
}

.book-card:hover {
  transform: translateY(-2px);
}

.book-title {
  font-size: 1.2em;
  margin-bottom: 8px;
  font-weight: bold;
}

.book-author {
  font-weight: bold;
  margin-bottom: 8px;
}

@media (max-width: 768px) {
  #books-container {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .book-card {
    width: 90%;
  }
}

const addBookBtn = document.getElementById('add-book-btn');
const booksContainer = document.getElementById('books-container');

addBookBtn.addEventListener('click', () => {
  const title = prompt('Enter the book title:');
  if (!title) return;

  const author = prompt('Enter the author:');
  if (!author) return;

  const description = prompt('Enter a short description:');
  if (!description) return;

  addBookToList(title, author, description);
});

function addBookToList(title, author, description) {
  const card = document.createElement('div');
  card.className = 'book-card';

  const titleElem = document.createElement('div');
  titleElem.className = 'book-title';
  titleElem.textContent = title;

  const authorElem = document.createElement('div');
  authorElem.className = 'book-author';
  authorElem.textContent = `Author: ${author}`;

  const descElem = document.createElement('p');
  descElem.textContent = description;

  card.appendChild(titleElem);
  card.appendChild(authorElem);
  card.appendChild(descElem);

  booksContainer.appendChild(card);
}
